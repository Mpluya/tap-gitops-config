apiVersion: kapp.k14s.io/v1alpha1
kind: Config
waitRules:
- conditionMatchers:
  - type: ServiceAvailable
    status: "False"
    failure: true
  - type: ServiceAvailable
    status: "True"
    success: true
  resourceMatchers:
  - apiVersionKindMatcher:
      apiVersion: servicebinding.io/v1alpha3
      kind: ServiceBinding
---
apiVersion: servicebinding.io/v1alpha3
kind: ServiceBinding
metadata:
  name: workload-server-with-custom-ca-workload-server-with-custom-ca
  annotations:
    autoscaling.knative.dev/minScale: "1"
    x95castle1.org/livenessProbe: '{"httpGet":{"path": "/actuator/health","port":8080},"initialDelaySeconds": 25,"periodSeconds": 5}'
    x95castle1.org/readinessProbe: '{"httpGet":{"path": "/actuator/health","port":8080},"initialDelaySeconds": 25,"periodSeconds": 5}'
    kapp.k14s.io/change-group: servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: workload-server-with-custom-ca
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: workload-server-with-custom-ca
spec:
  name: workload-server-with-custom-ca
  service:
    apiVersion: services.apps.tanzu.vmware.com/v1alpha1
    kind: ResourceClaim
    name: workload-server-with-custom-ca
  workload:
    apiVersion: apps/v1
    kind: Deployment
    name: workload-server-with-custom-ca
---
apiVersion: servicebinding.io/v1alpha3
kind: ServiceBinding
metadata:
  name: workload-server-with-custom-ca-ca-cert
  annotations:
    autoscaling.knative.dev/minScale: "1"
    x95castle1.org/livenessProbe: '{"httpGet":{"path": "/actuator/health","port":8080},"initialDelaySeconds": 25,"periodSeconds": 5}'
    x95castle1.org/readinessProbe: '{"httpGet":{"path": "/actuator/health","port":8080},"initialDelaySeconds": 25,"periodSeconds": 5}'
    kapp.k14s.io/change-group: servicebinding.io/ServiceBindings
  labels:
    app.kubernetes.io/part-of: workload-server-with-custom-ca
    apps.tanzu.vmware.com/auto-configure-actuators: "true"
    apps.tanzu.vmware.com/has-tests: "true"
    apps.tanzu.vmware.com/workload-type: server
    app.kubernetes.io/component: run
    carto.run/workload-name: workload-server-with-custom-ca
spec:
  name: ca-cert
  service:
    apiVersion: v1
    kind: Secret
    name: tap-ca
  workload:
    apiVersion: apps/v1
    kind: Deployment
    name: workload-server-with-custom-ca

